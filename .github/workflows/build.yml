name: Build and Release
permissions:
  contents: write
on:
  push:
    branches: [ master ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.version, 'beta') || contains(steps.get_version.outputs.version, 'alpha') }}

  build-launcher:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, ubuntu-latest, windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install Dependencies
        run: npm ci
        shell: bash
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.github_token }}
          # DÃ©commentez pour la notarisation macOS si vous avez des secrets
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        run: npm run build
        shell: bash
        timeout-minutes: 20
      - name: Lister les artefacts
        run: ls -la dist/
        shell: bash
      - name: Uploader les artefacts dans la release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/TwitchApp-${{ needs.create-release.outputs.version }}-${{ (matrix.os == 'macos-14' && 'arm64.dmg') || (matrix.os == 'ubuntu-latest' && 'AppImage') || (matrix.os == 'windows-latest' && 'portable.exe') }}
          asset_name: TwitchApp-${{ needs.create-release.outputs.version }}-${{ (matrix.os == 'macos-14' && 'arm64.dmg') || (matrix.os == 'ubuntu-latest' && 'AppImage') || (matrix.os == 'windows-latest' && 'portable.exe') }}
          asset_content_type: application/octet-stream